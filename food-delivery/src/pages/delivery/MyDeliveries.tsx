import { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import axios from "axios";
import {
  Container,
  Title,
  OrderList,
  OrderItem,
  AcceptButton,
  CompleteButton,
  StatusTag,
  Message,
} from "./MyDeliveries.styles.";

// ‚úÖ –ü–æ–ø—Ä–∞–≤–µ–Ω import
interface Order {
  id: number;
  status: string;
  total_price: number;
  delivery_id?: number | null;
}

const MyDeliveries: React.FC = () => {
  const [orders, setOrders] = useState<Order[]>([]);
  const [loading, setLoading] = useState<boolean>(true);
  const navigate = useNavigate();

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –∫–æ—Ä–∏—Å–Ω–∏–∫–æ—Ç –µ "delivery"
  useEffect(() => {
    const checkRole = async () => {
      try {
        const token = localStorage.getItem("token");
        if (!token) {
          navigate("/");
          return;
        }

        const resp = await axios.get<{ role: string }>(
          "http://localhost:5000/me",
          {
            headers: {
              Authorization: `Bearer ${token}`,
            },
          }
        );

        if (resp.data.role !== "delivery") {
          navigate("/");
        }
      } catch (err) {
        console.error("Error checking role:", err);
        navigate("/");
      }
    };
    checkRole();
  }, [navigate]);

  // –§—É–Ω–∫—Ü–∏—ò–∞ –∑–∞ –≤—á–∏—Ç—É–≤–∞—ö–µ –Ω–∞ –Ω–∞—Ä–∞—á–∫–∏
  const fetchOrders = async () => {
    setLoading(true);
    try {
      console.log("üöö –ü—Ä–µ–≤–∑–µ–º–∞–º –Ω–∞—Ä–∞—á–∫–∏...");

      const token = localStorage.getItem("token");
      if (!token) {
        console.error("‚ùå –ù–µ–º–∞ —Ç–æ–∫–µ–Ω! –ü—Ä–µ–Ω–∞—Å–æ—á—É–≤–∞–º...");
        navigate("/");
        return;
      }

      const resp = await axios.get("http://localhost:5000/my-deliveries", {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });

      console.log("üì¶ –î–æ–±–∏–µ–Ω–∏ –Ω–∞—Ä–∞—á–∫–∏:", resp.data);
      setOrders(resp.data as Order[]);
    } catch (error) {
      console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–µ–º–∞—ö–µ –Ω–∞ –Ω–∞—Ä–∞—á–∫–∏:", error);
    }
    setLoading(false);
  };

  // –ü—Ä–µ–≤–∑–µ–º–∞—ö–µ –Ω–∞ –Ω–∞—Ä–∞—á–∫–∏—Ç–µ –ø—Ä–∏ –≤—á–∏—Ç—É–≤–∞—ö–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∞—Ç–∞
  useEffect(() => {
    fetchOrders();
  }, []);

  // –ü—Ä–∏—Ñ–∞—ú–∞—ö–µ –Ω–∞ –Ω–∞—Ä–∞—á–∫–∞ -> —Å—Ç–∞—Ç—É—Å: "–í–æ –¥–æ—Å—Ç–∞–≤–∞"
  const handleAcceptOrder = async (orderId: number) => {
    try {
      const token = localStorage.getItem("token");
      if (!token) {
        alert("‚ùå –ù–µ–º–∞—Ç–µ —Ç–æ–∫–µ–Ω! –ù–∞—ò–∞–≤–µ—Ç–µ —Å–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ.");
        return;
      }

      await axios.put(
        `http://localhost:5000/orders/${orderId}/accept`,
        {},
        {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        }
      );

      alert("‚úÖ –£—Å–ø–µ—à–Ω–æ —ò–∞ –ø—Ä–∏—Ñ–∞—Ç–∏–≤—Ç–µ –Ω–∞—Ä–∞—á–∫–∞—Ç–∞!");
      fetchOrders(); // –û—Å–≤–µ–∂–∏ —ò–∞ –ª–∏—Å—Ç–∞—Ç–∞ –Ω–∞ –Ω–∞—Ä–∞—á–∫–∏
    } catch (error) {
      console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–∏—Ñ–∞—ú–∞—ö–µ –Ω–∞—Ä–∞—á–∫–∞:", error);
      alert("–ù–µ –º–æ–∂–µ –¥–∞ —Å–µ –ø—Ä–∏—Ñ–∞—Ç–∏!");
    }
  };

  // –ò—Å–ø–æ—Ä–∞–∫–∞ -> —Å—Ç–∞—Ç—É—Å: "–ò—Å–ø–æ—Ä–∞—á–∞–Ω–∞"
  const markAsDelivered = async (orderId: number) => {
    try {
      const token = localStorage.getItem("token");
      if (!token) {
        alert("‚ùå –ù–µ–º–∞—Ç–µ —Ç–æ–∫–µ–Ω! –ù–∞—ò–∞–≤–µ—Ç–µ —Å–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ.");
        return;
      }

      await axios.put(
        `http://localhost:5000/orders/${orderId}/status`,
        { status: "–ò—Å–ø–æ—Ä–∞—á–∞–Ω–∞" },
        {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        }
      );

      alert("‚úÖ –ù–∞—Ä–∞—á–∫–∞—Ç–∞ –µ —É—Å–ø–µ—à–Ω–æ –∏—Å–ø–æ—Ä–∞—á–∞–Ω–∞!");
      fetchOrders(); // –û—Å–≤–µ–∂–∏ —ò–∞ –ª–∏—Å—Ç–∞—Ç–∞ –Ω–∞ –Ω–∞—Ä–∞—á–∫–∏
    } catch (error) {
      console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∞–∂—É—Ä–∏—Ä–∞—ö–µ –Ω–∞ —Å—Ç–∞—Ç—É—Å–æ—Ç:", error);
      alert("–ù–µ—É—Å–ø–µ—à–Ω–æ –∞–∂—É—Ä–∏—Ä–∞—ö–µ –Ω–∞ —Å—Ç–∞—Ç—É—Å–æ—Ç.");
    }
  };

  return (
    <Container>
      <Title>üöö –î–æ—Å—Ç–∞–ø–Ω–∏ –ù–∞—Ä–∞—á–∫–∏</Title>

      {loading ? (
        <Message>üîÑ –í—á–∏—Ç—É–≤–∞—ö–µ –Ω–∞ –Ω–∞—Ä–∞—á–∫–∏—Ç–µ...</Message>
      ) : orders.length === 0 ? (
        <Message>üì≠ –ù–µ–º–∞ –¥–æ—Å—Ç–∞–ø–Ω–∏ –Ω–∞—Ä–∞—á–∫–∏ –≤–æ –º–æ–º–µ–Ω—Ç–æ–≤.</Message>
      ) : (
        <OrderList>
          {orders.map((order) => (
            <OrderItem key={order.id}>
              <div>
                <p>
                  <strong>–ù–∞—Ä–∞—á–∫–∞ #{order.id}</strong>
                </p>
                <p>
                  <strong>–°—Ç–∞—Ç—É—Å:</strong>{" "}
                  <StatusTag status={order.status}>{order.status}</StatusTag>
                </p>
                <p>
                  <strong>–¶–µ–Ω–∞:</strong> {order.total_price} –¥–µ–Ω.
                </p>
              </div>

              {/* –ê–∫–æ –Ω–∞—Ä–∞—á–∫–∞—Ç–∞ –µ —Å–ª–æ–±–æ–¥–Ω–∞ (–±–µ–∑ –¥–æ—Å—Ç–∞–≤—É–≤–∞—á) -> –ö–æ–ø—á–µ –∑–∞ –ø—Ä–∏—Ñ–∞—ú–∞—ö–µ */}
              {order.delivery_id === null && (
                <AcceptButton onClick={() => handleAcceptOrder(order.id)}>
                  –ü—Ä–∏–º–∏ –ù–∞—Ä–∞—á–∫–∞
                </AcceptButton>
              )}

              {/* –ê–∫–æ –Ω–∞—Ä–∞—á–∫–∞—Ç–∞ –µ ‚Äû–í–æ –¥–æ—Å—Ç–∞–≤–∞‚Äú -> –ö–æ–ø—á–µ –∑–∞ –∏—Å–ø–æ—Ä–∞–∫–∞ */}
              {order.status === "–í–æ –¥–æ—Å—Ç–∞–≤–∞" && (
                <CompleteButton onClick={() => markAsDelivered(order.id)}>
                  –ò—Å–ø–æ—Ä–∞—á–∞—ò
                </CompleteButton>
              )}
            </OrderItem>
          ))}
        </OrderList>
      )}
    </Container>
  );
};

export default MyDeliveries;
